// initialize required libraries
var express = require('express');
var request = require('request');
var fs = require('fs');
var app = express();

//socket.io startup
const
  io = require("socket.io"),
  //you can change socketio port here, if you so desire
  server = io.listen(8889);
let
  sequenceNumberByClient = new Map();
server.on("connection", (socket) => {
  console.info(`Client connected [id=${socket.id}]`);
  sequenceNumberByClient.set(socket, 1);
  socket.on("disconnect", () => {
    sequenceNumberByClient.delete(socket);
    console.info(`Client gone [id=${socket.id}]`);
  });
});
app.use(express.static(__dirname + '/public'))
require('events').EventEmitter.defaultMaxListeners = 100;

//spawn spotify access token requesting script
const {spawn} = require('child_process');
    const bat = spawn('cmd.exe', ['/c', 'tokengen.bat']);

//header settings
app.use(function (req, res, next) {
   //if you change server port, change it here as well
  res.setHeader('Access-Control-Allow-Origin', 'http://localhost:8888');
  res.setHeader('Access-Control-Allow-Credentials', 'true');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');
  res.setHeader('Access-Control-Allow-Headers', 'Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers');
  next();
});


//main loop
function a() {

  if (0 < 1) {
//spawn spotify access token requesting script
    const {spawn} = require('child_process');
    const bat = spawn('cmd.exe', ['/c', 'tokengen.bat']);
    bat.stdout.on('data', (data) => {});
    bat.stderr.on('data', (data) => {});
    bat.on('exit', (code) => {});

//read spotify acces token generated by tokengen.bat
    let rawtkn = fs.readFileSync('./token.json');
    let tknjson = JSON.parse(rawtkn);
    let access_token = tknjson.access_token

//set up variables for the spotify api
    var play = {
      url: 'https://api.spotify.com/v1/me/player/currently-playing',
      headers: {
        'Authorization': 'Bearer ' + access_token
      },
      json: true
    };

//spotify api request
    request.get(play, function (error, response, body) {
      //handle undefined
      if (body == undefined) {
        console.log("Not used:" + body);
        //read file created when response wasnt undefined
        let raw = fs.readFileSync('./play.json');
        let safe = JSON.parse(raw);
        let id = safe.item.id
        //merge song id to create a link to embed
        let embedlink = ("https://open.spotify.com/embed/track/" + id)
        //send to frontend via socketio
        for (const [client] of sequenceNumberByClient.entries()) {
          client.emit('embedlink', embedlink)
        }
      //handle correct response
      } else {
          let id = body.item.id
          //merge song id to create a link to embed
          let embedlink = ("https://open.spotify.com/embed/track/" + id)
          //write file if next response is undefined
          fs.writeFile('./play.json', JSON.stringify(body, undefined, 2), function (err) {
            if (err) console.log(err);
          });
          //send to frontend via socketio
          for (const [client] of sequenceNumberByClient.entries()) {
            client.emit('embedlink', embedlink)
          }
      }
    })
  }
}
//loopback at 2000ms interval, you can adjust the delay to your liking, how fast you want it to get updated
setInterval(a, 2000)

//handle buttonpress requests from frontend
server.on("connection", (socket) => {
  socket.on('click', bttid => {
    console.log("recieved: " + bttid)
    //spawn .bat file named the same as the button id, this lets you execute anything you want
    var batid = bttid + ".bat"
    const {
      spawn
    } = require('child_process');
    const bat = spawn('cmd.exe', ['/c', batid]);
    bat.stdout.on('data', (data) => {});
    bat.stderr.on('data', (data) => {});
    bat.on('exit', (code) => {});
  });
})

//you can change server port here, if you so desire
console.log('Listening on 8888');
app.listen(8888);